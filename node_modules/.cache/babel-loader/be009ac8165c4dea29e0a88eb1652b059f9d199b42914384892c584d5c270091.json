{"ast":null,"code":"var _jsxFileName = \"/Users/skillsacademy87/sei-synchrony/Projects/Notes-App-V2/notesfront/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport AllNotes from './pages/AllNotes';\nimport SingleNote from './pages/SingleNote';\nimport Form from './pages/Form';\nimport './App.css';\nimport { Route, Routes } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Alert } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiURL = 'https://notes-api-backend.herokuapp.com';\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const getNotes = async () => {\n    const response = await fetch(apiURL + '/notes/');\n    const data = await response.json();\n    setPosts(data);\n  };\n  useEffect(() => {\n    getNotes();\n  }, []);\n  const handleFormSubmission = async (data, type) => {\n    if (type === 'new') {\n      const response = await fetch(`${apiURL}/notes/`, {\n        method: 'post',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      getNotes();\n      /*#__PURE__*/_jsxDEV(Alert, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Hey! You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this);\n    } else {\n      const response = await fetch(`${apiURL}/notes/${data.id}/`, {\n        method: 'put',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      getNotes();\n    }\n  };\n  const deleteNote = async id => {\n    const response = await fetch(`${apiURL}/notes/${id}/`, {\n      method: 'delete'\n    });\n    getNotes();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" My Notes \\u270D\\uD83C\\uDFFD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(AllNotes, {\n          posts: posts,\n          deleteNote: deleteNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/post/:id\",\n        element: /*#__PURE__*/_jsxDEV(SingleNote, {\n          posts: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/new\",\n        element: /*#__PURE__*/_jsxDEV(Form, {\n          posts: posts,\n          handleSubmit: handleFormSubmission,\n          buttonLabel: \"Add Note\",\n          formType: \"new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/edit/:id\",\n        element: /*#__PURE__*/_jsxDEV(Form, {\n          posts: posts,\n          handleSubmit: handleFormSubmission,\n          buttonLabel: \"Edit Note\",\n          formType: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","AllNotes","SingleNote","Form","Route","Routes","Alert","jsxDEV","_jsxDEV","apiURL","App","_s","posts","setPosts","getNotes","response","fetch","data","json","handleFormSubmission","type","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","id","deleteNote","className","path","element","handleSubmit","buttonLabel","formType","_c","$RefreshReg$"],"sources":["/Users/skillsacademy87/sei-synchrony/Projects/Notes-App-V2/notesfront/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport AllNotes from './pages/AllNotes';\nimport SingleNote from './pages/SingleNote';\nimport Form from './pages/Form';\nimport './App.css';\nimport {Route, Routes} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Alert } from 'reactstrap';\n\n\nconst apiURL = 'https://notes-api-backend.herokuapp.com'\n\nfunction App() {\n  const [posts, setPosts] = useState([])\n\n  const getNotes = async () => {\n    const response = await fetch(apiURL + '/notes/')\n    const data = await response.json()\n    setPosts(data)\n  }\n\n  useEffect(()=> {\n    getNotes()\n  }, [])\n\n  const handleFormSubmission = async (data, type) => {\n    if (type === 'new'){\n      const response = await fetch(`${apiURL}/notes/`, {\n        method:'post',\n        headers : {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data)\n      })\n      getNotes();\n      <Alert><h1>Hey! You</h1></Alert>\n    } else {\n      const response = await fetch(`${apiURL}/notes/${data.id}/`, {\n        method:'put',\n        headers : {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data)\n      })\n      getNotes()\n    }\n  }\n\n  const deleteNote =  async (id) => {\n    const response = await fetch(`${apiURL}/notes/${id}/`, {\n      method: 'delete'\n    })\n    getNotes()\n  }\n  \n  \n\n\n  return (\n    <div className=\"App\">\n    <h1> My Notes ‚úçüèΩ</h1>\n    <Routes>\n      <Route \n      path='/'\n      element={<AllNotes posts={posts} deleteNote={deleteNote}/>}\n      />\n      <Route \n      path='/post/:id'\n      element={<SingleNote posts={posts}/>}\n      />\n      <Route \n      path='/new'\n      element={<Form  posts={posts} handleSubmit={handleFormSubmission} buttonLabel = 'Add Note' formType='new'/>}\n      />\n      <Route \n      path='/edit/:id'\n      element={<Form posts={posts} handleSubmit={handleFormSubmission} buttonLabel= 'Edit Note' formType= 'edit'/>}\n      />\n    </Routes>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAO,WAAW;AAClB,SAAQC,KAAK,EAAEC,MAAM,QAAO,kBAAkB;AAC9C,OAAO,sCAAsC;AAC7C,SAASC,KAAK,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnC,MAAMC,MAAM,GAAG,yCAAyC;AAExD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMe,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,MAAM,GAAG,SAAS,CAAC;IAChD,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCL,QAAQ,CAACI,IAAI,CAAC;EAChB,CAAC;EAEDjB,SAAS,CAAC,MAAK;IACbc,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,oBAAoB,GAAG,MAAAA,CAAOF,IAAI,EAAEG,IAAI,KAAK;IACjD,IAAIA,IAAI,KAAK,KAAK,EAAC;MACjB,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,MAAO,SAAQ,EAAE;QAC/CY,MAAM,EAAC,MAAM;QACbC,OAAO,EAAG;UACR,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;MAC3B,CAAC,CAAC;MACFH,QAAQ,CAAC,CAAC;MACV,aAAAN,OAAA,CAACF,KAAK;QAAAoB,QAAA,eAAClB,OAAA;UAAAkB,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAClC,CAAC,MAAM;MACL,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,MAAO,UAASQ,IAAI,CAACc,EAAG,GAAE,EAAE;QAC1DV,MAAM,EAAC,KAAK;QACZC,OAAO,EAAG;UACR,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;MAC3B,CAAC,CAAC;MACFH,QAAQ,CAAC,CAAC;IACZ;EACF,CAAC;EAED,MAAMkB,UAAU,GAAI,MAAOD,EAAE,IAAK;IAChC,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,MAAO,UAASsB,EAAG,GAAE,EAAE;MACrDV,MAAM,EAAE;IACV,CAAC,CAAC;IACFP,QAAQ,CAAC,CAAC;EACZ,CAAC;EAKD,oBACEN,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAAAP,QAAA,gBACpBlB,OAAA;MAAAkB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBtB,OAAA,CAACH,MAAM;MAAAqB,QAAA,gBACLlB,OAAA,CAACJ,KAAK;QACN8B,IAAI,EAAC,GAAG;QACRC,OAAO,eAAE3B,OAAA,CAACP,QAAQ;UAACW,KAAK,EAAEA,KAAM;UAACoB,UAAU,EAAEA;QAAW;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,eACFtB,OAAA,CAACJ,KAAK;QACN8B,IAAI,EAAC,WAAW;QAChBC,OAAO,eAAE3B,OAAA,CAACN,UAAU;UAACU,KAAK,EAAEA;QAAM;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACFtB,OAAA,CAACJ,KAAK;QACN8B,IAAI,EAAC,MAAM;QACXC,OAAO,eAAE3B,OAAA,CAACL,IAAI;UAAES,KAAK,EAAEA,KAAM;UAACwB,YAAY,EAAEjB,oBAAqB;UAACkB,WAAW,EAAG,UAAU;UAACC,QAAQ,EAAC;QAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3G,CAAC,eACFtB,OAAA,CAACJ,KAAK;QACN8B,IAAI,EAAC,WAAW;QAChBC,OAAO,eAAE3B,OAAA,CAACL,IAAI;UAACS,KAAK,EAAEA,KAAM;UAACwB,YAAY,EAAEjB,oBAAqB;UAACkB,WAAW,EAAE,WAAW;UAACC,QAAQ,EAAE;QAAM;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5G,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACnB,EAAA,CArEQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAuEZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}