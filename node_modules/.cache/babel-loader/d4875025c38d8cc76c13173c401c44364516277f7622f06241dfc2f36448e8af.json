{"ast":null,"code":"var _jsxFileName = \"/Users/skillsacademy87/sei-synchrony/Projects/Notes-App-V2/notesfront/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiURL = 'https://notes-api-backend.herokuapp.com';\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const getNotes = async () => {\n    const response = await fetch(apiURL + '/notes/');\n    const data = await response.json();\n    setPosts(data);\n  };\n  useEffect(() => {\n    getNotes();\n  }, []);\n  const handleFormSubmission = async (data, type) => {\n    if (type === 'new') {\n      const response = await fetch(`${apiURL}/notes/`, {\n        method: 'post',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      getNotes();\n    } else {\n      const response = await fetch;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","apiURL","App","_s","posts","setPosts","getNotes","response","fetch","data","json","handleFormSubmission","type","method","headers","body","JSON","stringify","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/skillsacademy87/sei-synchrony/Projects/Notes-App-V2/notesfront/src/App.js"],"sourcesContent":["\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport './App.css';\n\n\nconst apiURL = 'https://notes-api-backend.herokuapp.com'\n\nfunction App() {\n\nconst [posts, setPosts] = useState([])\n\nconst getNotes = async () => {\n  const response = await fetch(apiURL + '/notes/')\n  const data = await response.json()\n  setPosts(data)\n}\n\nuseEffect(()=> {\n  getNotes()\n}, [])\n\nconst handleFormSubmission = async (data, type) => {\n\n  if(type === 'new'){\n    const response = await fetch(`${apiURL}/notes/`, {\n      method: 'post',\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data)\n    })\n    getNotes()\n  } else {\n    const response = await fetch\n  }\n}\n\n\n\n\n\n\n\n\n  return (\n    <div className=\"App\">\n    \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnB,MAAMC,MAAM,GAAG,yCAAyC;AAExD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,MAAM,GAAG,SAAS,CAAC;IAChD,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCL,QAAQ,CAACI,IAAI,CAAC;EAChB,CAAC;EAEDZ,SAAS,CAAC,MAAK;IACbS,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,oBAAoB,GAAG,MAAAA,CAAOF,IAAI,EAAEG,IAAI,KAAK;IAEjD,IAAGA,IAAI,KAAK,KAAK,EAAC;MAChB,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,MAAO,SAAQ,EAAE;QAC/CY,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;MAC3B,CAAC,CAAC;MACFH,QAAQ,CAAC,CAAC;IACZ,CAAC,MAAM;MACL,MAAMC,QAAQ,GAAG,MAAMC,KAAK;IAC9B;EACF,CAAC;EASC,oBACER,OAAA;IAAKkB,SAAS,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEf,CAAC;AAEV;AAACnB,EAAA,CA1CQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}